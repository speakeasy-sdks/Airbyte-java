/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package WayScript.airbyte_test.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AirbyteStreamConfiguration - the mutable part of the stream to configure the destination
 */
public class AirbyteStreamConfiguration {
    /**
     * Alias name to the stream to be used in the destination
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("aliasName")
    public String aliasName;

    public AirbyteStreamConfiguration withAliasName(String aliasName) {
        this.aliasName = aliasName;
        return this;
    }
    
    /**
     * Path to the field that will be used to determine if a record is new or modified since the last sync. This field is REQUIRED if `sync_mode` is `incremental`. Otherwise it is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("cursorField")
    public String[] cursorField;

    public AirbyteStreamConfiguration withCursorField(String[] cursorField) {
        this.cursorField = cursorField;
        return this;
    }
    
    @JsonProperty("destinationSyncMode")
    public DestinationSyncMode destinationSyncMode;

    public AirbyteStreamConfiguration withDestinationSyncMode(DestinationSyncMode destinationSyncMode) {
        this.destinationSyncMode = destinationSyncMode;
        return this;
    }
    
    /**
     * Whether field selection should be enabled. If this is true, only the properties in `selectedFields` will be included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fieldSelectionEnabled")
    public Boolean fieldSelectionEnabled;

    public AirbyteStreamConfiguration withFieldSelectionEnabled(Boolean fieldSelectionEnabled) {
        this.fieldSelectionEnabled = fieldSelectionEnabled;
        return this;
    }
    
    /**
     * Paths to the fields that will be used as primary key. This field is REQUIRED if `destination_sync_mode` is `*_dedup`. Otherwise it is ignored.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("primaryKey")
    public String[][] primaryKey;

    public AirbyteStreamConfiguration withPrimaryKey(String[][] primaryKey) {
        this.primaryKey = primaryKey;
        return this;
    }
    
    /**
     * If this is true, the stream is selected with all of its properties. For new connections, this considers if the stream is suggested or not
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selected")
    public Boolean selected;

    public AirbyteStreamConfiguration withSelected(Boolean selected) {
        this.selected = selected;
        return this;
    }
    
    /**
     * Paths to the fields that will be included in the configured catalog. This must be set if `fieldSelectedEnabled` is set. An empty list indicates that no properties will be included.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("selectedFields")
    public SelectedFieldInfo[] selectedFields;

    public AirbyteStreamConfiguration withSelectedFields(SelectedFieldInfo[] selectedFields) {
        this.selectedFields = selectedFields;
        return this;
    }
    
    /**
     * Does the connector suggest that this stream be enabled by default?
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("suggested")
    public Boolean suggested;

    public AirbyteStreamConfiguration withSuggested(Boolean suggested) {
        this.suggested = suggested;
        return this;
    }
    
    @JsonProperty("syncMode")
    public SyncMode syncMode;

    public AirbyteStreamConfiguration withSyncMode(SyncMode syncMode) {
        this.syncMode = syncMode;
        return this;
    }
    
    public AirbyteStreamConfiguration(@JsonProperty("destinationSyncMode") DestinationSyncMode destinationSyncMode, @JsonProperty("syncMode") SyncMode syncMode) {
        this.destinationSyncMode = destinationSyncMode;
        this.syncMode = syncMode;
  }
}
