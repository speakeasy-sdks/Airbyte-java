/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package WayScript.airbyte_test.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

public class AttemptFailureReason {
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("externalMessage")
    public String externalMessage;

    public AttemptFailureReason withExternalMessage(String externalMessage) {
        this.externalMessage = externalMessage;
        return this;
    }
    
    /**
     * Indicates where the error originated. If not set, the origin of error is not well known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureOrigin")
    public AttemptFailureOriginEnum failureOrigin;

    public AttemptFailureReason withFailureOrigin(AttemptFailureOriginEnum failureOrigin) {
        this.failureOrigin = failureOrigin;
        return this;
    }
    
    /**
     * Categorizes well known errors into types for programmatic handling. If not set, the type of error is not well known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("failureType")
    public AttemptFailureTypeEnum failureType;

    public AttemptFailureReason withFailureType(AttemptFailureTypeEnum failureType) {
        this.failureType = failureType;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("internalMessage")
    public String internalMessage;

    public AttemptFailureReason withInternalMessage(String internalMessage) {
        this.internalMessage = internalMessage;
        return this;
    }
    
    /**
     * True if it is known that retrying may succeed, e.g. for a transient failure. False if it is known that a retry will not succeed, e.g. for a configuration issue. If not set, retryable status is not well known.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("retryable")
    public Boolean retryable;

    public AttemptFailureReason withRetryable(Boolean retryable) {
        this.retryable = retryable;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("stacktrace")
    public String stacktrace;

    public AttemptFailureReason withStacktrace(String stacktrace) {
        this.stacktrace = stacktrace;
        return this;
    }
    
    @JsonProperty("timestamp")
    public Long timestamp;

    public AttemptFailureReason withTimestamp(Long timestamp) {
        this.timestamp = timestamp;
        return this;
    }
    
    public AttemptFailureReason(@JsonProperty("timestamp") Long timestamp) {
        this.timestamp = timestamp;
  }
}
