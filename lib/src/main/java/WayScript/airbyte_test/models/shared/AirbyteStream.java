/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package WayScript.airbyte_test.models.shared;

import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * AirbyteStream - the immutable schema defined by the source
 */
public class AirbyteStream {
    /**
     * Path to the field that will be used to determine if a record is new or modified since the last sync. If not provided by the source, the end user will have to specify the comparable themselves.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("defaultCursorField")
    public String[] defaultCursorField;

    public AirbyteStream withDefaultCursorField(String[] defaultCursorField) {
        this.defaultCursorField = defaultCursorField;
        return this;
    }
    
    /**
     * Stream schema using Json Schema specs.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("jsonSchema")
    public StreamJsonSchema jsonSchema;

    public AirbyteStream withJsonSchema(StreamJsonSchema jsonSchema) {
        this.jsonSchema = jsonSchema;
        return this;
    }
    
    /**
     * Stream's name.
     */
    @JsonProperty("name")
    public String name;

    public AirbyteStream withName(String name) {
        this.name = name;
        return this;
    }
    
    /**
     * Optional Source-defined namespace. Airbyte streams from the same sources should have the same namespace. Currently only used by JDBC destinations to determine what schema to write to.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("namespace")
    public String namespace;

    public AirbyteStream withNamespace(String namespace) {
        this.namespace = namespace;
        return this;
    }
    
    /**
     * If the source defines the cursor field, then any other cursor field inputs will be ignored. If it does not, either the user_provided one is used, or the default one is used as a backup.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDefinedCursor")
    public Boolean sourceDefinedCursor;

    public AirbyteStream withSourceDefinedCursor(Boolean sourceDefinedCursor) {
        this.sourceDefinedCursor = sourceDefinedCursor;
        return this;
    }
    
    /**
     * If the source defines the primary key, paths to the fields that will be used as a primary key. If not provided by the source, the end user will have to specify the primary key themselves.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("sourceDefinedPrimaryKey")
    public String[][] sourceDefinedPrimaryKey;

    public AirbyteStream withSourceDefinedPrimaryKey(String[][] sourceDefinedPrimaryKey) {
        this.sourceDefinedPrimaryKey = sourceDefinedPrimaryKey;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("supportedSyncModes")
    public SyncMode[] supportedSyncModes;

    public AirbyteStream withSupportedSyncModes(SyncMode[] supportedSyncModes) {
        this.supportedSyncModes = supportedSyncModes;
        return this;
    }
    
    public AirbyteStream(@JsonProperty("name") String name) {
        this.name = name;
  }
}
